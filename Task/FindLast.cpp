// Task.cpp : Определяет функции для статической библиотеки.
//

#include "pch.h"
#include "Task.h"
int FindLast(int* arr, int elements, int value)
{
	if (elements == 0 || arr == nullptr) return -1;	//проверка на пустой массив
	else
	{
		for (int i = elements - 1; i <= elements; i--)	//перебор всех элементов с конца
		{
			if (arr[i] == value) return i;	//если эл. равен искомому значению возвращаем его
			if (i < 0) return -1;			// если индекс меньше нуля возвращаем -1
		}
		return -1;
	}
}
/*
Создайте функцию бинарного поиска, которая ищет в сортированном по возрастанию целочисленном массиве 
указанное число и возвращает индекс ПОСЛЕДНЕГО элемента, относительно начала массива, который равен 
заданному числу. Нумерация элементов начинается с 0.

1. Функция должна иметь имя FindLast
2. Функция в качестве параметров должна принимать следующее:
	- первый параметр - указатель на сортированный массив
	- второй параметр - количество элементов массива
	- третий параметр - искомое значение

3. Функция должна возвращать индекс последнего элемента, относительно начала массива, который равен
	заданному числу. Если число не найдено, необходимо вернуть -1.
	Тип возвращаемого результата - int.

	Например: имеем массив int m[] = {1,2,3,4,5,6,7,8,9};
	FindLast(m, 9, 5) должна вернуть 4, т.к. число со значением 5 стоит под номером 4 (начина с 0) и 
	такое число единственное.
	Еще пример:
	int m[] = {1,2,3,4,5,6,7,7,7,8,9};
	FindLast(m, 11, 7) должна вернуть 8, т.к. последний элемент со значением 7 стоит под номером 8
	(начина с 0).

	!!!!! ВАЖНО !!!!!
	В данном файле разрешается разместить кроме кода требуемой функции - код любых других вспомогательных
	функций. Никакой функции main() в этом файле быть не должно.
	Если вы хотите испытать и отладить вашу функцию - пишите код в файле Example.cpp проекта Example данного решения
	Для этого задайте в качестве запускаемого проекта проект Example.

	ДЛЯ АВТОМАТИЧЕСКОГО ТЕСТИРОВАНИЯ  проверки правильности работы вашего задания - сделайте запукаемым проект
	Tests и запустите его. Если функция написана правильно - все тесты должны успешно выполниться
	(зеленый цвет в консоли). Если ваша функция работает некорректно - в консоли будут сообщения красным цветом
*/